name: Continuous integration in gitation

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 17
      uses: actions/setup-node@v3
      with:
        node-version: 17

    - name: Install dependencies
      run: npm install

    - name: Launch test
      run: npm test

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      PouletMayo_Db__Host: localhost
      PouletMayo_Db__User: root
      PouletMayo_Db__Password: ${{ secrets.CI_DB_PASSWORD }}
      PouletMayo_Db__Database: pouletmayo

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core SDK 6
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Install dependencies
      run: dotnet restore

    - name: Test
      run: dotnet test --no-restore

  integration-test:
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      MYSQL_PWD: ${{ secrets.CI_DB_PASSWORD }}

    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    steps:
    - uses: actions/checkout@v3

    - name: Run database migration
      run: ./bootstrap-mysql.sh
      working-directory: mysql

    - name: Start components
      run: docker compose -f docker-compose.build.yml up -d
      env:
        DOCKER_NETWORK: ${{ job.services.mysql.network }}

    - name: Run integration test
      run: |
        wget -q https://github.com/grafana/k6/releases/download/v0.37.0/k6-v0.37.0-linux-amd64.tar.gz
        tar -xzf k6-v0.37.0-linux-amd64.tar.gz
        chmod +x k6-v0.37.0-linux-amd64/k6
        k6-v0.37.0-linux-amd64/k6 run script.js
      working-directory: k6

    - name: Stop components
      run: docker compose -f docker-compose.build.yml down


  build-image:
    strategy:
      matrix:
        component: ["frontend", "backend"]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: [integration-test]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    steps:
    - uses: actions/checkout@v3

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Build the Docker image
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.component }}
        file: ${{ matrix.component }}/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/spm-${{ matrix.component }}:${{ github.ref_name }}
